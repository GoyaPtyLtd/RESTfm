### Build filemaker-server .deb package dependencies file ###
ARG UBUNTU_VERSION=${UBUNTU_VERSION:-22.04}

FROM ubuntu:${UBUNTU_VERSION} as dependencies

ARG DEBIAN_FRONTEND=noninteractive
ARG FMS_VERSION=${FMS_VERSION:-20.03}

COPY ./files/fms/installer/filemaker-server-${FMS_VERSION}.*.deb /fms/

RUN dpkg -I "/fms/filemaker-server-${FMS_VERSION}."*".deb" | \
    grep Depends: | sed -e 's/ Depends: //' -e 's/, /\n/g' > \
    "/fms/fms-package-deps.txt"


### Build FMS docker image ###
ARG UBUNTU_VERSION=${UBUNTU_VERSION:-22.04}

FROM ubuntu:${UBUNTU_VERSION}

ARG DEBIAN_FRONTEND=noninteractive
ARG FMS_VERSION=${FMS_VERSION:-20.03}

COPY --from=dependencies /fms/fms-package-deps.txt /fms/

# Install base packages and fms dependencies
RUN apt-get update -y && \
    apt-get install -y lsb-release inotify-tools && \
    xargs apt-get install -y < /fms/fms-package-deps.txt && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/* /fms/fms-package-deps.txt

# Configure timezone
ARG TIMEZONE=${TIMEZONE:-Australia/Melbourne}

RUN apt-get update -y && \
    apt-get install -y tzdata && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/* && \
    rm -f /etc/localtime && \
    ln -s "/usr/share/zoneinfo/${TIMEZONE}" /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata

# Set up fmsadmin group and fmserver user in advance so we can run with the
# uid/gid we want
ARG USER_ID=${USER_ID:-500}
ARG GROUP_ID=${GROUP_ID:-500}

RUN groupadd --non-unique --gid ${GROUP_ID} fmsadmin && \
    useradd --non-unique --system --shell /sbin/nologin --uid ${USER_ID} \
        -g fmsadmin fmserver

# Any special config for debug build
# FIXME: move 'jq' to base package install above
ARG DEBUG_BUILD=${DEBUG_BUILD:-false}
RUN if [ "$DEBUG_BUILD" = "true" ]; then \
        apt-get update -y && \
        apt-get install -y less vim telnet tmux jq && \
        apt-get clean -y && \
        rm -rf /var/lib/apt/lists/*; \
    fi

# Copy FMS docker scripts to root of container
COPY ./files/fms/docker/. /

# Install FMS Pseudo-System app
RUN touch /.dockerenv && /fms-pseudo-sys --install-self

# Copy FMS docker systemd files
COPY ./files/fms/systemd/. /etc/systemd/system/

# Copy filemaker-server installer, licence, and config
COPY ["./files/fms/installer/Assisted Install.txt", "/fms/"]
COPY ./files/fms/installer/LicenseCert.fmcert /fms/
COPY ./files/fms/installer/filemaker-server-${FMS_VERSION}.*.deb /fms/

# Install FMS
RUN /fms-pseudo-sys --install-fms /fms/filemaker-server-${FMS_VERSION}.*.deb && \
    echo "Done installing FMS, cleaning up" && \
    mv /fms-pseudo-sys.log /fms-pseudo-sys.install.log && \
    rm -f /run/nginx.pid && rm -f /run/path-watch-process.pid && \
    rm -f /fms/filemaker-server-${FMS_VERSION}.*.deb 

# Expose FileMaker Server ports
EXPOSE 80
EXPOSE 443
EXPOSE 2399
EXPOSE 5003

# init runs as root, but FileMaker Server will run as fmserver
USER root

HEALTHCHECK --interval=30s --timeout=30s --start-period=30s --retries=3 CMD [ "/healthcheck" ]

# Run init as the first process
ENTRYPOINT [ "/usr/sbin/init" ]
# Pass list of services to start (in order) to init
CMD [ "fmshelper", "first-start" ]
